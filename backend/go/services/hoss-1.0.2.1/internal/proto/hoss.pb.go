// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: hoss.proto

package hoss

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListBannedTracks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannedTracks []*BannedTrack `protobuf:"bytes,1,rep,name=banned_tracks,json=bannedTracks,proto3" json:"banned_tracks,omitempty"`
}

func (x *ListBannedTracks) Reset() {
	*x = ListBannedTracks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hoss_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBannedTracks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBannedTracks) ProtoMessage() {}

func (x *ListBannedTracks) ProtoReflect() protoreflect.Message {
	mi := &file_hoss_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBannedTracks.ProtoReflect.Descriptor instead.
func (*ListBannedTracks) Descriptor() ([]byte, []int) {
	return file_hoss_proto_rawDescGZIP(), []int{0}
}

func (x *ListBannedTracks) GetBannedTracks() []*BannedTrack {
	if x != nil {
		return x.BannedTracks
	}
	return nil
}

type BannedTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId   string `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Status    bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Reason    string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	AddedBy   string `protobuf:"bytes,4,opt,name=added_by,json=addedBy,proto3" json:"added_by,omitempty"`
	Timestamp int64  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *BannedTrack) Reset() {
	*x = BannedTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hoss_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannedTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannedTrack) ProtoMessage() {}

func (x *BannedTrack) ProtoReflect() protoreflect.Message {
	mi := &file_hoss_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannedTrack.ProtoReflect.Descriptor instead.
func (*BannedTrack) Descriptor() ([]byte, []int) {
	return file_hoss_proto_rawDescGZIP(), []int{1}
}

func (x *BannedTrack) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *BannedTrack) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *BannedTrack) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BannedTrack) GetAddedBy() string {
	if x != nil {
		return x.AddedBy
	}
	return ""
}

func (x *BannedTrack) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type NullMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NullMessage) Reset() {
	*x = NullMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hoss_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullMessage) ProtoMessage() {}

func (x *NullMessage) ProtoReflect() protoreflect.Message {
	mi := &file_hoss_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullMessage.ProtoReflect.Descriptor instead.
func (*NullMessage) Descriptor() ([]byte, []int) {
	return file_hoss_proto_rawDescGZIP(), []int{2}
}

type SingleTrackQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId string `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *SingleTrackQuery) Reset() {
	*x = SingleTrackQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hoss_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleTrackQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleTrackQuery) ProtoMessage() {}

func (x *SingleTrackQuery) ProtoReflect() protoreflect.Message {
	mi := &file_hoss_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleTrackQuery.ProtoReflect.Descriptor instead.
func (*SingleTrackQuery) Descriptor() ([]byte, []int) {
	return file_hoss_proto_rawDescGZIP(), []int{3}
}

func (x *SingleTrackQuery) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

type AddBannedTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId string `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	AddedBy string `protobuf:"bytes,3,opt,name=added_by,json=addedBy,proto3" json:"added_by,omitempty"`
}

func (x *AddBannedTrack) Reset() {
	*x = AddBannedTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hoss_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBannedTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBannedTrack) ProtoMessage() {}

func (x *AddBannedTrack) ProtoReflect() protoreflect.Message {
	mi := &file_hoss_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBannedTrack.ProtoReflect.Descriptor instead.
func (*AddBannedTrack) Descriptor() ([]byte, []int) {
	return file_hoss_proto_rawDescGZIP(), []int{4}
}

func (x *AddBannedTrack) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *AddBannedTrack) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AddBannedTrack) GetAddedBy() string {
	if x != nil {
		return x.AddedBy
	}
	return ""
}

type RemoveBannedTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removed bool `protobuf:"varint,1,opt,name=removed,proto3" json:"removed,omitempty"`
}

func (x *RemoveBannedTrack) Reset() {
	*x = RemoveBannedTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hoss_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBannedTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBannedTrack) ProtoMessage() {}

func (x *RemoveBannedTrack) ProtoReflect() protoreflect.Message {
	mi := &file_hoss_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBannedTrack.ProtoReflect.Descriptor instead.
func (*RemoveBannedTrack) Descriptor() ([]byte, []int) {
	return file_hoss_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveBannedTrack) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

var File_hoss_proto protoreflect.FileDescriptor

var file_hoss_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x6f,
	0x73, 0x73, 0x22, 0x4a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x68, 0x6f, 0x73, 0x73, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x91,
	0x01, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x0d, 0x0a, 0x0b, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x2d, 0x0a, 0x10, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64,
	0x22, 0x5e, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x65, 0x64, 0x42, 0x79,
	0x22, 0x2d, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x32,
	0xf3, 0x01, 0x0a, 0x13, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x12, 0x11, 0x2e, 0x68, 0x6f, 0x73, 0x73, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x68, 0x6f, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x68, 0x6f, 0x73, 0x73,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x11, 0x2e, 0x68, 0x6f, 0x73, 0x73, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x12, 0x14,
	0x2e, 0x68, 0x6f, 0x73, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x1a, 0x11, 0x2e, 0x68, 0x6f, 0x73, 0x73, 0x2e, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x42, 0x61, 0x6e, 0x12, 0x16, 0x2e, 0x68, 0x6f, 0x73, 0x73, 0x2e, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x68,
	0x6f, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x42, 0x1e, 0x5a, 0x1c, 0x70, 0x65, 0x70, 0x65, 0x67, 0x61, 0x2e,
	0x64, 0x65, 0x76, 0x2f, 0x6f, 0x6e, 0x65, 0x74, 0x68, 0x69, 0x72, 0x74, 0x79, 0x6f, 0x6e, 0x65,
	0x2f, 0x68, 0x6f, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hoss_proto_rawDescOnce sync.Once
	file_hoss_proto_rawDescData = file_hoss_proto_rawDesc
)

func file_hoss_proto_rawDescGZIP() []byte {
	file_hoss_proto_rawDescOnce.Do(func() {
		file_hoss_proto_rawDescData = protoimpl.X.CompressGZIP(file_hoss_proto_rawDescData)
	})
	return file_hoss_proto_rawDescData
}

var file_hoss_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_hoss_proto_goTypes = []interface{}{
	(*ListBannedTracks)(nil),  // 0: hoss.ListBannedTracks
	(*BannedTrack)(nil),       // 1: hoss.BannedTrack
	(*NullMessage)(nil),       // 2: hoss.NullMessage
	(*SingleTrackQuery)(nil),  // 3: hoss.SingleTrackQuery
	(*AddBannedTrack)(nil),    // 4: hoss.AddBannedTrack
	(*RemoveBannedTrack)(nil), // 5: hoss.RemoveBannedTrack
}
var file_hoss_proto_depIdxs = []int32{
	1, // 0: hoss.ListBannedTracks.banned_tracks:type_name -> hoss.BannedTrack
	2, // 1: hoss.BannedTracksService.GetAll:input_type -> hoss.NullMessage
	3, // 2: hoss.BannedTracksService.GetSingle:input_type -> hoss.SingleTrackQuery
	4, // 3: hoss.BannedTracksService.AddBan:input_type -> hoss.AddBannedTrack
	3, // 4: hoss.BannedTracksService.RemoveBan:input_type -> hoss.SingleTrackQuery
	0, // 5: hoss.BannedTracksService.GetAll:output_type -> hoss.ListBannedTracks
	1, // 6: hoss.BannedTracksService.GetSingle:output_type -> hoss.BannedTrack
	1, // 7: hoss.BannedTracksService.AddBan:output_type -> hoss.BannedTrack
	5, // 8: hoss.BannedTracksService.RemoveBan:output_type -> hoss.RemoveBannedTrack
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_hoss_proto_init() }
func file_hoss_proto_init() {
	if File_hoss_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hoss_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBannedTracks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hoss_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannedTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hoss_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hoss_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleTrackQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hoss_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBannedTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hoss_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBannedTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hoss_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hoss_proto_goTypes,
		DependencyIndexes: file_hoss_proto_depIdxs,
		MessageInfos:      file_hoss_proto_msgTypes,
	}.Build()
	File_hoss_proto = out.File
	file_hoss_proto_rawDesc = nil
	file_hoss_proto_goTypes = nil
	file_hoss_proto_depIdxs = nil
}
